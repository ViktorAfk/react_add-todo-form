{"version":3,"sources":["helpers.tsx","api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","components/TodoForm/TodoForm.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["users","id","name","username","email","getUserById","find","user","setNextId","usersTodos","allIds","map","userTodo","Math","max","UserInfo","className","href","TodoInfo","todo","cn","completed","title","TodoList","props","todos","TodoForm","isErrorSelect","isErrorTitle","handleSubmit","todoTitle","setTodoTitle","selectedId","setSelectedId","setIsErrorSelect","setIsErrorTitle","usersFromServer","action","method","onSubmit","type","value","onChange","event","target","placeholder","Number","disabled","allTodos","userId","App","useState","setTodos","preventDefault","userFromServer","currentUsersTodos","newTodo","trim","addTodo","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bda1741b.chunk.js","sourcesContent":["import { TodoWithUser, Todos, Users } from './components/types';\n\nconst getUserById = (users: Users[], id:number) => {\n  return users.find(user => user.id === id);\n};\n\nexport const getUsersTodos = (todos:Todos[], users:Users[]):TodoWithUser[] => {\n  return todos.map(todo => (\n    { ...todo, user: getUserById(users, todo.userId) }));\n};\n\nexport const setNextId = (usersTodos:TodoWithUser[]):number => {\n  const allIds = usersTodos.map(userTodo => userTodo.id);\n\n  return Math.max(...allIds) + 1;\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { Users } from '../types';\n\ninterface Props {\n  user: Users | undefined;\n}\nexport const UserInfo:React.FC<Props> = ({ user }) => {\n  return (\n    <a className=\"UserInfo\" href={`mailto:${user?.email}`}>\n      {user?.name}\n    </a>\n  );\n};\n","import React from 'react';\nimport cn from 'classnames';\nimport { UserInfo } from '../UserInfo';\nimport { TodoWithUser } from '../types';\n\ninterface Props {\n  todo: TodoWithUser\n}\nexport const TodoInfo:React.FC<Props> = ({ todo }) => {\n  const { user } = todo;\n\n  return (\n    <article\n      data-id={todo.id}\n      className={cn('TodoInfo', { 'TodoInfo--completed': todo.completed })}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {todo.title}\n      </h2>\n      <UserInfo user={user} key={todo.user?.id} />\n    </article>\n  );\n};\n","import { TodoInfo } from '../TodoInfo';\nimport { TodoWithUser } from '../types';\n\ninterface Props {\n  todos: TodoWithUser[];\n}\nexport const TodoList:React.FC<Props> = (props) => {\n  const { todos } = props;\n\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo data-id={todo.id} todo={todo} key={todo.id} />\n      ))}\n\n    </section>\n  );\n};\n","import { Users } from '../types';\n\ninterface Props {\n  isErrorTitle:boolean,\n  isErrorSelect:boolean,\n  handleSubmit: (event:React.FormEvent) => void;\n  todoTitle: string,\n  setTodoTitle:(event:string) => void;\n  selectedId: number,\n  setSelectedId:(id:number) => void,\n  setIsErrorTitle: (value:boolean) => void,\n  setIsErrorSelect: (value:boolean) => void\n  usersFromServer: Users[]\n}\nexport const TodoForm:React.FC<Props> = (props) => {\n  const {\n    isErrorSelect,\n    isErrorTitle,\n    handleSubmit,\n    todoTitle,\n    setTodoTitle,\n    selectedId,\n    setSelectedId,\n    setIsErrorSelect,\n    setIsErrorTitle,\n    usersFromServer,\n  } = props;\n\n  return (\n    <form\n      action=\"/api/todos\"\n      method=\"POST\"\n      onSubmit={handleSubmit}\n    >\n      <div className=\"field\">\n        <input\n          type=\"text\"\n          data-cy=\"titleInput\"\n          value={todoTitle}\n          onChange={(event) => {\n            setTodoTitle(event.target.value);\n            setIsErrorTitle(false);\n          }}\n          placeholder=\"Enter your todo\"\n        />\n        {isErrorTitle\n        && (<span className=\"error\">Please enter a title</span>)}\n      </div>\n\n      <div className=\"field\">\n        <select\n          data-cy=\"userSelect\"\n          value={selectedId}\n          onChange={(event) => {\n            setSelectedId(Number(event.target.value));\n            setIsErrorSelect(false);\n          }}\n        >\n          <option value={0} disabled>Choose a user</option>\n          {usersFromServer.map(user => (\n            <option value={user?.id}>\n              {user?.name}\n            </option>\n          ))}\n        </select>\n\n        {isErrorSelect && (<span className=\"error\">Please choose a user</span>)}\n      </div>\n\n      <button\n        type=\"submit\"\n        data-cy=\"submitButton\"\n      >\n        Add\n      </button>\n    </form>\n  );\n};\n","import './App.scss';\nimport { useState } from 'react';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { getUsersTodos, setNextId } from './helpers';\nimport { TodoWithUser } from './components/types';\nimport { TodoList } from './components/TodoList';\nimport { TodoForm } from './components/TodoForm/TodoForm';\n\nconst allTodos = getUsersTodos(todosFromServer, usersFromServer);\n\nexport const App = () => {\n  const [todos, setTodos] = useState<TodoWithUser[]>(allTodos);\n  const [selectedId, setSelectedId] = useState<number>(0);\n  const [todoTitle, setTodoTitle] = useState<string>('');\n  const [isErrorTitle, setIsErrorTitle] = useState(false);\n  const [isErrorSelect, setIsErrorSelect] = useState(false);\n\n  const addTodo = (todo:string, userId:number) => {\n    const user = usersFromServer\n      .find(userFromServer => userFromServer.id === userId);\n\n    setTodos((currentUsersTodos) => {\n      const newTodo:TodoWithUser = {\n        id: setNextId(todos),\n        title: todo.trim(),\n        completed: false,\n        userId,\n        user,\n      };\n\n      return [...currentUsersTodos, newTodo];\n    });\n  };\n\n  const handleSubmit = (event:React.FormEvent) => {\n    event.preventDefault();\n    setIsErrorSelect(!selectedId);\n    setIsErrorTitle(!todoTitle);\n    if (!todoTitle || !selectedId) {\n      return;\n    }\n\n    addTodo(todoTitle, selectedId);\n    setTodoTitle('');\n    setSelectedId(0);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n      <TodoForm\n        isErrorTitle={isErrorTitle}\n        isErrorSelect={isErrorSelect}\n        handleSubmit={handleSubmit}\n        todoTitle={todoTitle}\n        setTodoTitle={setTodoTitle}\n        selectedId={selectedId}\n        setSelectedId={setSelectedId}\n        setIsErrorTitle={setIsErrorTitle}\n        setIsErrorSelect={setIsErrorSelect}\n        usersFromServer={usersFromServer}\n      />\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}